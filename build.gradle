// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
    }
    //let project evaluate its script first
    project.afterEvaluate {
        //only apply to projects that have the android plugin
        if (project.plugins.hasPlugin('com.android.application')) {
            project.android.applicationVariants.all { variant ->
                //add a generated crashlytics properties file if the project applies the crashlytics plugin
                createCrashlyticsProperties(project, variant)
            }

        }
    }
}

def createCrashlyticsProperties(Project project, variant) {
    def crashlyticsSecret = CRASHLYTICS_API_SECRET
    def crashlyticsKey = CRASHLYTICS_API_KEY

    File crashlyticsProperties = new File("${project.projectDir.absolutePath}/crashlytics.properties")
    def variantSuffix = variant.name.capitalize()
    def generateResourcesTask = project.tasks.getByName("crashlyticsGenerateResources${variantSuffix}")
    def generatePropertiesTask = task("crashlyticsGenerateProperties${variantSuffix}") << {
        Properties properties = new Properties()
        println "...copying apiSecret for ${variant.name}"
        properties.put("apiSecret", crashlyticsSecret)
        println "...copying apiKey for ${variant.name}"
        properties.put("apiKey", crashlyticsKey)
        properties.store(new FileWriter(crashlyticsProperties), "")
    }
    generateResourcesTask.dependsOn generatePropertiesTask
    def assembleTask = project.tasks.getByName("assemble${variantSuffix}")
    def uploadCrashlyticsTask = project.tasks.getByName("crashlyticsUploadDistribution${variantSuffix}")
    uploadCrashlyticsTask.dependsOn assembleTask
    uploadCrashlyticsTask.doLast {
        println "...removing crashlytics.properties"
        crashlyticsProperties.delete()
    }
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'

    }
}
apply plugin: 'com.android.application'
apply plugin: 'crashlytics'

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url 'http://download.crashlytics.com/maven' }
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.jakewharton.hugo'
//apply plugin: 'android'
def AAVersion = '3.2'

dependencies {
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    compile 'com.crashlytics.android:crashlytics:1.+'
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        // if you have multiple outputs (when using splits), you may want to have other index than 0

        resourcePackageName 'com.rosinen.noctis'

        // If you're using Android NBS flavors you should use the following line instead of hard-coded packageName
        // resourcePackageName android.defaultConfig.packageName

        // You can set optional annotation processing options here, like these commented options:
        // logLevel 'INFO'
        // logFile '/var/log/aa.log'
    }
}

ext {
    vMajor = 0
    vMinor = 0
    vBugfix = 22
}

android {
    signingConfigs {
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
        debug {
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
        }
        crashlyticsRelease{
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
    }
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    defaultConfig {
        applicationId "com.rosinen.noctis"
        minSdkVersion 15
        targetSdkVersion 22

        versionCode computeVersionCode() // ex: 1
        versionName computeVersionName() // ex: 0.00.001

        resValue "string", "FACEBOOK_API_KEY", FACEBOOK_API_KEY
        resValue "string", "MAPS_API_KEY", MAPS_API_KEY
        resValue "string", "CRASHLYTICS_API_KEY", CRASHLYTICS_API_KEY
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    String releaseNotes =
                    "* App can be restarted and skip button still works\n" +
                    "* Onclick on a marker scrolls to the right eventpage\n" +
                    "* Swiping through events centers the map to the event\n" +
                    "* Changed animation vor the detailview to come up\n"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
            ext.betaDistributionReleaseNotes=releaseNotes
            ext.betaDistributionGroupAliases="noctis-beta"
        }
        crashlyticsRelease{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ext.betaDistributionReleaseNotes=releaseNotes
            ext.betaDistributionGroupAliases="noctis-beta"

        }
    }
    packagingOptions {
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.google.android.gms:play-services:7.0.0'
    compile 'com.facebook.android:facebook-android-sdk:4.0.1'
    compile 'com.android.support:support-v13:22.0.0'
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.2'
    compile 'com.sothree.slidinguppanel:library:3.0.0'
//    compile 'com.google.guava:guava:18.0'
}

// Returns “0.00.001”
def computeVersionName() {
    String versionName = String.format('%d.%02d.%03d', vMajor, ext.vMinor, ext.vBugfix)
    println "Version Name: " + versionName
   return String.format('%d.%02d.%03d', vMajor, ext.vMinor, ext.vBugfix)
}
// Returns 1, for Jenkins build #0.00.001
// Returns 101001, for build #1.1.001
def computeVersionCode() {
    int versionCode = (ext.vMajor * 100000) + (ext.vMinor * 1000) + ext.vBugfix
    println "Version Code: " + versionCode
    return versionCode
}

